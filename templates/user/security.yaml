security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    encoders:
        App\Entity\User:
            algorithm: bcrypt
    role_hierarchy:
        ROLE_ADMIN:          ROLE_USER
        ROLE_SUPER_ADMIN:    [ROLE_ADMIN, ROLE_SUP]

    providers:
        #in_memory: { memory: ~ }
        in_database:
            entity:
                class: App\Entity\User
                property: username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            pattern: ^/
            provider: in_database
            form_login:
                login_path: app_login
                check_path: app_login
                csrf_token_generator: security.csrf.token_manager
                default_target_path: categorie_index
            logout:
                path:       app_logout
                target:     Accueil
            remember_me:
                secret:     '%env(APP_SECRET)%' # %secret% est un param√®tre de parameter
                lifetime:   604800
                path:       /
                always_remember_me: true
            #logout_on_user_change: true

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        #- { path: ^/, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/Administration, roles: ROLE_USER }
        # - { path: ^/profile, roles: ROLE_USER }
